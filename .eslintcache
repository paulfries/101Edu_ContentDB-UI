[{"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\index.js":"1","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\config.js":"2","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\App.js":"3","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\serviceWorker.js":"4","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\Routes.js":"5","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\ErrorBoundary.js":"6","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\contextLib.js":"7","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\errorLib.js":"8","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\UnauthenticatedRoute.js":"9","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\AuthenticatedRoute.js":"10","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Settings.js":"11","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Home.js":"12","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\NotFound.js":"13","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Login.js":"14","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Signup.js":"15","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\NewQuestion.js":"16","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Questions.js":"17","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ResetPassword.js":"18","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ChangePassword.js":"19","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ChangeEmail.js":"20","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\hooksLib.js":"21","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\LoaderButton.js":"22","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\openstaxList.js":"23","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\thoughtTypeList.js":"24","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\reviewerList.js":"25","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\questionTopic.js":"26","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\questionUnit.js":"27","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\statusOptions.js":"28","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\awsLib.js":"29","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\newStatusOptions.js":"30"},{"size":1203,"mtime":1606276746061,"results":"31","hashOfConfig":"32"},{"size":524,"mtime":1606276746043,"results":"33","hashOfConfig":"32"},{"size":3341,"mtime":1607327249378,"results":"34","hashOfConfig":"32"},{"size":5227,"mtime":1606276746062,"results":"35","hashOfConfig":"32"},{"size":1901,"mtime":1606276746043,"results":"36","hashOfConfig":"32"},{"size":584,"mtime":1606276746043,"results":"37","hashOfConfig":"32"},{"size":174,"mtime":1606276746062,"results":"38","hashOfConfig":"32"},{"size":921,"mtime":1606276746062,"results":"39","hashOfConfig":"32"},{"size":871,"mtime":1606276746043,"results":"40","hashOfConfig":"32"},{"size":526,"mtime":1606276746043,"results":"41","hashOfConfig":"32"},{"size":1764,"mtime":1607324583612,"results":"42","hashOfConfig":"32"},{"size":3117,"mtime":1607326278765,"results":"43","hashOfConfig":"32"},{"size":196,"mtime":1606276746053,"results":"44","hashOfConfig":"32"},{"size":2436,"mtime":1607323586451,"results":"45","hashOfConfig":"32"},{"size":4244,"mtime":1606276746053,"results":"46","hashOfConfig":"32"},{"size":25419,"mtime":1607324045997,"results":"47","hashOfConfig":"32"},{"size":30234,"mtime":1607324016407,"results":"48","hashOfConfig":"32"},{"size":4673,"mtime":1606276746053,"results":"49","hashOfConfig":"32"},{"size":2656,"mtime":1606276746053,"results":"50","hashOfConfig":"32"},{"size":3502,"mtime":1606276746052,"results":"51","hashOfConfig":"32"},{"size":300,"mtime":1606276746062,"results":"52","hashOfConfig":"32"},{"size":482,"mtime":1606276746043,"results":"53","hashOfConfig":"32"},{"size":937,"mtime":1606276746053,"results":"54","hashOfConfig":"32"},{"size":217,"mtime":1606276746053,"results":"55","hashOfConfig":"32"},{"size":283,"mtime":1606276746053,"results":"56","hashOfConfig":"32"},{"size":1224,"mtime":1606276746053,"results":"57","hashOfConfig":"32"},{"size":754,"mtime":1606276746053,"results":"58","hashOfConfig":"32"},{"size":502,"mtime":1606276746053,"results":"59","hashOfConfig":"32"},{"size":255,"mtime":1606276746062,"results":"60","hashOfConfig":"32"},{"size":181,"mtime":1606276746053,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1clq1oj",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\index.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\config.js",["131"],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\App.js",["132","133","134","135","136"],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\serviceWorker.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\Routes.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\ErrorBoundary.js",[],["137","138"],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\contextLib.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\errorLib.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\UnauthenticatedRoute.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\AuthenticatedRoute.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Settings.js",["139","140","141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport config from \"../config\";\r\nimport \"./Settings.css\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { render } from \"react-dom\";\r\n\r\nexport default function Settings() {\r\n\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []);\r\n  //call back function\r\n  async function onLoad() {\r\n    try {\r\n      await Auth.currentSession();\r\n      userHasAuthenticated(true);\r\n    }\r\n    catch(e) {\r\n      if (e !== 'No current user') {\r\n        onError(e);\r\n      }\r\n    }\r\n\r\n    setIsAuthenticating(false);\r\n  }\r\n\r\n  const handleLogout = async event => {\r\n    await Auth.signOut();\r\n\r\n    userHasAuthenticated(false);\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n\r\n    history.push(\"/\");\r\n  }\r\n  //email, password, logout buttons\r\n  return (\r\n    <div className=\"Settings\">\r\n      <LinkContainer to=\"/settings/email\">\r\n        <LoaderButton block bsSize=\"large\">\r\n          Change Email\r\n        </LoaderButton>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/settings/password\">\r\n        <LoaderButton block bsSize=\"large\">\r\n          Change Password\r\n        </LoaderButton>\r\n      </LinkContainer>\r\n      <LoaderButton block bsSize=\"large\" onClick={handleLogout}>\r\n          Logout\r\n        </LoaderButton>\r\n      <hr />\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Home.js",["146","147","148","149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Home.css\";\r\nimport { API } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nexport default function Home() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const { isAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function onLoad() {\r\n      if (!isAuthenticated) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const questions = await loadQuestions();\r\n        setQuestions(questions);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n\r\n    onLoad();\r\n  }, [isAuthenticated]);\r\n\r\n  function loadQuestions() {\r\n    return API.get(\"questions\", \"/questions\");\r\n  }\r\n\r\n  function renderQuestionsList(questions) {\r\n    return [{}].concat(questions).map((question, i) =>\r\n      i !== 0 ? (\r\n        <LinkContainer key={question.questionId} to={`/questions/${question.questionId}`}>\r\n          <ListGroupItem header={question.questionStatement.trim().split(\"\\n\")[0]}>\r\n            {\"Created: \" + new Date(question.createdAt).toLocaleString()}\r\n          </ListGroupItem>\r\n        </LinkContainer>\r\n      ) : (\r\n        <LinkContainer key=\"new\" to=\"/questions/new\">\r\n          <ListGroupItem>\r\n            <h4>\r\n              <b>{\"\\uFF0B\"}</b> Create a new question\r\n            </h4>\r\n          </ListGroupItem>\r\n        </LinkContainer>\r\n      )\r\n    );\r\n  }\r\n\r\n  function renderLander() {\r\n    return (\r\n      <div className=\"lander\">\r\n        <h1>Chem101 Content Database</h1>\r\n        <p>A test question and answer database for the Chem101 Application</p>\r\n        <div>\r\n          <Link to=\"/login\" className=\"btn btn-info btn-lg\">\r\n            Login\r\n          </Link>\r\n          <Link to=\"/signup\" className=\"btn btn-success btn-lg\">\r\n            Signup\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderQuestions() {\r\n    return (\r\n      <div className=\"questions\">\r\n        <div className=\"titleheader\">My Chem101 Questions</div>\r\n        <div className=\"catbtn\">\r\n        </div>\r\n        <ListGroup>\r\n          {!isLoading && renderQuestionsList(questions)}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {isAuthenticated ? renderQuestions() : renderLander()}\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\NotFound.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Login.js",["156","157"],"import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// store what user enters in the form\r\nexport default function Login() {\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n//checks if fields are empty\r\n  function validateForm() {\r\n    return fields.email.length > 0 && fields.password.length > 0;\r\n  }\r\n//call back function\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.signIn(fields.email, fields.password);\r\n      userHasAuthenticated(true);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n//login/password form validation, forgot passwrod link and signup link\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"formHeader\">\r\n        <h1>Log In or Sign Up</h1>\r\n        </div>\r\n      <form onSubmit={handleSubmit}>\r\n      \r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n        >\r\n         <Link to=\"/signup\" className=\"btn\">\r\n            Signup\r\n          </Link>\r\n        </Button>\r\n        <Link to=\"/login/reset\">Forgot password?</Link>\r\n        </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Signup.js",["158","159","160"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\nimport { Auth } from \"aws-amplify\";\r\n// store what user enters in the form\r\nexport default function Signup() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    confirmationCode: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [newUser, setNewUser] = useState(null);\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //checks if fields are empty\r\n  function validateForm() {\r\n    return (\r\n      fields.email.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n  //checks if fields are empty\r\n  function validateConfirmationForm() {\r\n    return fields.confirmationCode.length > 0;\r\n  }\r\n  //call back function\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: fields.email,\r\n        password: fields.password,\r\n      });\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  //call back function\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n      await Auth.signIn(fields.email, fields.password);\r\n  \r\n      userHasAuthenticated(true);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  //confirmation code validation form\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n        <div className=\"formHeader\">\r\n        <h1>Confirmation Code</h1>\r\n        </div>\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmationCode}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          \r\n        >\r\n          Verify\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  //sign up form validation\r\n  function renderForm() {\r\n    return (\r\n       <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n        <div className=\"signupFormHeader\">\r\n        <h2>Sign Up</h2>\r\n        </div>\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          \r\n        >\r\n          Signup\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Signup\">\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\NewQuestion.js",["161"],"import React, { useRef, useState, ReactDOM } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport config from \"../config\";\r\nimport \"./NewQuestion.css\";\r\nimport { API } from \"aws-amplify\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\nimport Select from \"react-select\";\r\nimport Options from \"../data/newStatusOptions\";\r\nimport QuestionUnit from \"../data/questionUnit\";\r\nimport QuestionTopic from \"../data/questionTopic\";\r\nimport ReviewerList from \"../data/reviewerList\";\r\nimport OpenStaxList from \"../data/openstaxList\";\r\nimport ThoughtTypeList from \"../data/thoughtTypeList\";\r\n\r\nexport default function NewQuestion() {\r\n\r\n  const file = useRef(null);\r\n  const history = useHistory();\r\n  const [questionStatus, setQuestionStatus] = useState(\"Incomplete\");\r\n  const [questionStatement, setQuestionStatement] = useState(\"\");\r\n  const [mcOption1, setMcOption1] = useState(\"\");\r\n  const [mcOption1Feedback, setMcOption1Feedback] = useState(\"\");\r\n  const [mcCorrectAnswer1, setMcCorrectAnswer1] = useState(false);\r\n  const [mcOption2, setMcOption2] = useState(\"\");\r\n  const [mcOption2Feedback, setMcOption2Feedback] = useState(\"\");\r\n  const [mcCorrectAnswer2, setMcCorrectAnswer2] = useState(false);\r\n  const [mcOption3, setMcOption3] = useState(\"\");\r\n  const [mcOption3Feedback, setMcOption3Feedback] = useState(\"\");\r\n  const [mcCorrectAnswer3, setMcCorrectAnswer3] = useState(false);\r\n  const [mcOption4, setMcOption4] = useState(\"\");\r\n  const [mcOption4Feedback, setMcOption4Feedback] = useState(\"\");\r\n  const [mcCorrectAnswer4, setMcCorrectAnswer4] = useState(false);\r\n  const [mcOption5, setMcOption5] = useState(\"\");\r\n  const [mcOption5Feedback, setMcOption5Feedback] = useState(\"\");\r\n  const [mcCorrectAnswer5, setMcCorrectAnswer5] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const questionType = \"Multiple-Choice\";\r\n  const [questionUnit, setQuestionUnit] = useState(\"\");\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [firstReviewer, setFirstReviewer] = useState(\"\");\r\n  const [secReviewer, setSecReviewer] = useState(\"\");\r\n  const [correctAnswer1Thru5, setCorrectAnswer1Thru5] = useState(\"\");\r\n  const [openStaxTrad2e, setOpenStaxTrad2e] = useState(\"\");\r\n  const [openStaxAF2e, setOpenStaxAF2e] = useState(\"\");\r\n  const [assignedTo, setAssignedTo] = useState(\"\");\r\n  const [thoughtType, setThoughtType] = useState(\"\");\r\n  const [timeSuggested, setTimeSuggested] = useState(\"\");\r\n  const [solution, setSolution] = useState(\"\");\r\n\r\n  // handle onChange event of the Status dropdown\r\n  const handleStatusChange = (e) => {\r\n    setQuestionStatus(e.value);\r\n  };\r\n\r\n  const handleUnitChange = (e) => {\r\n    setQuestionUnit(e.value);\r\n  };\r\n\r\n  const handleTopicChange = (e) => {\r\n    setTopic(e.value);\r\n  };\r\n\r\n  const handleAssignedToChange = (e) => {\r\n    setAssignedTo(e.value);\r\n  };\r\n\r\n  const handleReviewer1Change = (e) => {\r\n    setFirstReviewer(e.value);\r\n  };\r\n\r\n  const handleReviewer2Change = (e) => {\r\n    setSecReviewer(e.value);\r\n  };\r\n\r\n  const handleOpenStaxTrad = (e) => {\r\n    setOpenStaxTrad2e(e.value);\r\n  };\r\n\r\n  const handleOpenStaxAF = (e) => {\r\n    setOpenStaxAF2e(e.value);\r\n  };\r\n\r\n  const handleThoughtType = (e) => {\r\n    setThoughtType(e.value);\r\n  };\r\n\r\n  function handleClick1() {\r\n    setMcCorrectAnswer1(true);\r\n    setMcCorrectAnswer2(false);\r\n    setMcCorrectAnswer3(false);\r\n    setMcCorrectAnswer4(false);\r\n    setMcCorrectAnswer5(false);\r\n    setCorrectAnswer1Thru5(\"1\");\r\n  }\r\n\r\n  function handleClick2() {\r\n    setMcCorrectAnswer1(false);\r\n    setMcCorrectAnswer2(true);\r\n    setMcCorrectAnswer3(false);\r\n    setMcCorrectAnswer4(false);\r\n    setMcCorrectAnswer5(false);\r\n    setCorrectAnswer1Thru5(\"2\");\r\n  }\r\n\r\n  function handleClick3() {\r\n    setMcCorrectAnswer1(false);\r\n    setMcCorrectAnswer2(false);\r\n    setMcCorrectAnswer3(true);\r\n    setMcCorrectAnswer4(false);\r\n    setMcCorrectAnswer5(false);\r\n    setCorrectAnswer1Thru5(\"3\");\r\n  }\r\n\r\n  function handleClick4() {\r\n    setMcCorrectAnswer1(false);\r\n    setMcCorrectAnswer2(false);\r\n    setMcCorrectAnswer3(false);\r\n    setMcCorrectAnswer4(true);\r\n    setMcCorrectAnswer5(false);\r\n    setCorrectAnswer1Thru5(\"4\");\r\n  }\r\n\r\n  function handleClick5() {\r\n    setMcCorrectAnswer1(false);\r\n    setMcCorrectAnswer2(false);\r\n    setMcCorrectAnswer3(false);\r\n    setMcCorrectAnswer4(false);\r\n    setMcCorrectAnswer5(true);\r\n    setCorrectAnswer1Thru5(\"5\");\r\n  }\r\n\r\n  function validateForm() {\r\n    return questionStatement.length > 0;\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 2097152\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const attachment = file.current ? await s3Upload(file.current) : null;\r\n\r\n      await createQuestion({\r\n        questionStatement,\r\n        attachment,\r\n        questionStatus,\r\n        questionType,\r\n        questionUnit,\r\n        topic,\r\n        assignedTo,\r\n        firstReviewer,\r\n        secReviewer,\r\n        openStaxTrad2e,\r\n        openStaxAF2e,\r\n        thoughtType,\r\n        timeSuggested,\r\n        mcOption1,\r\n        mcOption1Feedback,\r\n        mcCorrectAnswer1,\r\n        mcOption2,\r\n        mcOption2Feedback,\r\n        mcCorrectAnswer2,\r\n        mcOption3,\r\n        mcOption3Feedback,\r\n        mcCorrectAnswer3,\r\n        mcOption4,\r\n        mcOption4Feedback,\r\n        mcCorrectAnswer4,\r\n        mcOption5,\r\n        mcOption5Feedback,\r\n        mcCorrectAnswer5,\r\n        correctAnswer1Thru5,\r\n        solution,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function createQuestion(question) {\r\n    return API.post(\"questions\", \"/questions\", {\r\n      body: question,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewQuestion\">\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"containerDiv\">\r\n        <FormGroup controlId=\"questionStatus\">\r\n          <ControlLabel>Question Status:</ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            placeholder=\"Set the initial Status\"\r\n            value={Options.find((obj) => obj.value === questionStatus)}\r\n            onChange={handleStatusChange}\r\n            defaultValue={Options[0]}\r\n            isSearchable=\"true\"\r\n            name=\"questionStatus\"\r\n            options={Options}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <ControlLabel className=\"assignedTitle\" for=\"assignedTo\">\r\n            Assigned To:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"assignedTo\"\r\n            value={ReviewerList.find((obj) => obj.value === assignedTo)}\r\n            isSearchable=\"true\"\r\n            name=\"firstReviewer\"\r\n            onChange={handleAssignedToChange}\r\n            options={ReviewerList}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <ControlLabel className=\"reviewerTitle\" for=\"reviewer1\">\r\n            Reviewer 1:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"reviewer1\"\r\n            value={ReviewerList.find((obj) => obj.value === firstReviewer)}\r\n            isSearchable=\"true\"\r\n            name=\"firstReviewer\"\r\n            onChange={handleReviewer1Change}\r\n            options={ReviewerList}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel className=\"reviewerTitle\" for=\"reviewer2\">\r\n            Reviewer 2:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"reviewer2\"\r\n            value={ReviewerList.find((obj) => obj.value === secReviewer)}\r\n            isSearchable=\"true\"\r\n            name=\"secReviewer\"\r\n            onChange={handleReviewer2Change}\r\n            options={ReviewerList}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"questionUnit\">\r\n          <ControlLabel>Unit:</ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            placeholder=\"Set the Unit\"\r\n            value={QuestionUnit.find((obj) => obj.value === questionUnit)}\r\n            onChange={handleUnitChange}\r\n            isSearchable=\"true\"\r\n            name=\"questionUnit\"\r\n            options={QuestionUnit}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId=\"questionTopic\">\r\n          <ControlLabel>Topic:</ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            placeholder=\"Set the topic\"\r\n            value={QuestionTopic.find((obj) => obj.value === topic)}\r\n            onChange={handleTopicChange}\r\n            isSearchable=\"true\"\r\n            name=\"questionTopic\"\r\n            options={QuestionTopic}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <ControlLabel className=\"openstaxTitle\" for=\"openstaxTrad\">\r\n            OpenStax Traditional Reference:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"openstaxTrad\"\r\n            value={OpenStaxList.find((obj) => obj.value === openStaxTrad2e)}\r\n            isSearchable=\"true\"\r\n            name=\"openStaxTrad2e\"\r\n            onChange={handleOpenStaxTrad}\r\n            options={OpenStaxList}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel className=\"openstaxTitle\" for=\"openstaxAF\">\r\n            OpenStax Atoms First:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"openstaxAF\"\r\n            value={OpenStaxList.find((obj) => obj.value === openStaxAF2e)}\r\n            isSearchable=\"true\"\r\n            name=\"openStaxAF2e\"\r\n            onChange={handleOpenStaxAF}\r\n            options={OpenStaxList}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <ControlLabel className=\"thoughtType\" for=\"thoughtType\">\r\n            Thought Type:\r\n          </ControlLabel>\r\n          <Select\r\n            className=\"basic-single\"\r\n            classNamePrefix=\"select\"\r\n            id=\"thoughtType\"\r\n            value={ThoughtTypeList.find((obj) => obj.value === thoughtType)}\r\n            isSearchable=\"true\"\r\n            name=\"thoughtType\"\r\n            onChange={handleThoughtType}\r\n            options={ThoughtTypeList}\r\n          />\r\n        </FormGroup>\r\n        </div>\r\n        <div className=\"containerDiv\">\r\n        <FormGroup>\r\n          <div className=\"headerTitle\">\r\n          <label className=\"timeSuggested\" for=\"timeSuggested\">\r\n            Suggested Time\r\n          </label>\r\n          </div>\r\n          <input\r\n            className=\"timeField, suggestedTimeCentered\"\r\n            defaultValue={timeSuggested}\r\n            id=\"timeSuggested\"\r\n            componentClass=\"textbox\"\r\n            onChange={(e) => setTimeSuggested(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <div className=\"textBox\">\r\n            <text className=\"textStyling\">\r\n              The question prompt will be immediately visible to your students when this authored question is opened. \r\n              It is recommended to keep the prompt as short and concise as possible \r\n              so it is easily readable on student mobile devices such as smartphones.\r\n            </text>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"containerDiv\">\r\n        <FormGroup controlId=\"questionStatement\">\r\n          <div className=\"headerTitle\">\r\n          <ControlLabel>Question Prompt</ControlLabel>\r\n          </div>\r\n          <FormControl\r\n            value={questionStatement}\r\n            componentClass=\"textarea\"\r\n            onChange={(e) => setQuestionStatement(e.target.value)}\r\n            placeholder=\"e.g. How many protons are in carbon-12 atom?\"\r\n          />\r\n          <div className=\"textBox\">\r\n            <text className=\"textStyling\">\r\n              The question prompt will be immediately visible to your students when this authored question is opened. \r\n              It is recommended to keep the prompt as short and concise as possible \r\n              so it is easily readable on student mobile devices such as smartphones.\r\n            </text>\r\n          </div>\r\n        </FormGroup>\r\n        </div>\r\n        <div className=\"containerDiv\">\r\n        <FormGroup controlId=\"file\">\r\n          <div className=\"headerTitle\">\r\n          <ControlLabel>Question Image</ControlLabel>\r\n          </div>\r\n          <div className=\"attachmentPreview\">\r\n          <FormControl onChange={handleFileChange} type=\"file\" />\r\n          </div>\r\n          <div className=\"textBox\">\r\n            <text className=\"textStyling\">\r\n              You may choose to upload one image to be associated with your authored question. \r\n              The question image can be used to include tables of data, figures, or other relevant information associated with the question. \r\n              It is recommend to upload a square image so it is easily readable on student mobile devices such as smartphones.\r\n            </text>\r\n          </div>\r\n        </FormGroup>\r\n        </div>\r\n\r\n        <FormGroup>\r\n        <div className=\"containerDiv\">\r\n          <FormGroup controlId=\"AnswerGroup1\">\r\n            <dev>\r\n              <ControlLabel className=\"answerTitle\" for=\"Answers\">\r\n                Multiple Choice Option No. 1\r\n              </ControlLabel>\r\n            </dev>\r\n            <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <ControlLabel className=\"CorrectChkBox\" for=\"CorrectAnswer\">\r\n                Correct\r\n              </ControlLabel>\r\n              <FormControl\r\n                checked={mcCorrectAnswer1}\r\n                onChange={handleClick1}\r\n                id=\"CorrectAnswer\"\r\n                type=\"checkbox\"\r\n              />\r\n            </div>\r\n            <div className=\"column middle\">\r\n              A)\r\n            </div>\r\n            <div className=\"middleBelow\">\r\n              <span className=\"textBold\">Correct\r\n              Explanation</span>{\"\\n\"}\r\n              (Optional)\r\n            </div>\r\n            <div className=\"column right\">\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answer\">\r\n              Answer:\r\n            </ControlLabel>\r\n            \r\n            <FormControl\r\n              value={mcOption1}\r\n              id=\"Answer\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. 6\"\r\n              onChange={(e) => setMcOption1(e.target.value)}\r\n            />\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answerfeedback\">\r\n              Feedback:\r\n            </ControlLabel>\r\n\r\n            <FormControl\r\n              value={mcOption1Feedback}\r\n              id=\"Answerfeedback\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. The number of protons in an atom is equivalent to its atomic number on the periodic table, which is 6 in the case of a carbon atom.\"\r\n              onChange={(e) => setMcOption1Feedback(e.target.value)}\r\n            />\r\n            <FormGroup controlId=\"file\">\r\n              <ControlLabel className=\"answerAttachment\">\r\n                Attachment\r\n              </ControlLabel>\r\n              <FormControl onChange={handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            </div>\r\n            </div>\r\n          </FormGroup>\r\n\r\n\r\n          <FormGroup controlId=\"AnswerGroup2\">\r\n            <dev>\r\n              <ControlLabel className=\"answerTitle\" for=\"Answers\">\r\n                Multiple Choice Option No. 2\r\n              </ControlLabel>\r\n            </dev>\r\n            <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <ControlLabel className=\"CorrectChkBox\" for=\"CorrectAnswer\">\r\n                Correct\r\n              </ControlLabel>\r\n              <FormControl\r\n                checked={mcCorrectAnswer2}\r\n                id=\"CorrectAnswer\"\r\n                onChange={handleClick2}\r\n                type=\"checkbox\"\r\n              />\r\n            </div>\r\n            <div className=\"column middle\">\r\n              B)\r\n            </div>\r\n            <div className=\"middleBelow\">\r\n              <span className=\"textBold\">Incorrect\r\n              Feeback</span>{\"\\n\"}\r\n              (Optional)\r\n            </div>\r\n            <div className=\"column right\">\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answer\">\r\n              Answer:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption2}\r\n              id=\"Answer\"\r\n              class=\"answerfield\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. 12\"\r\n              onChange={(e) => setMcOption2(e.target.value)}\r\n            />\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answerfeedback\">\r\n              Feedback:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption2Feedback}\r\n              id=\"Answerfeedback\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. This is the mass number of carbon-12, which is the number of protons plus neutrons in the atom.\"\r\n              onChange={(e) => setMcOption2Feedback(e.target.value)}\r\n            />\r\n\r\n            <FormGroup controlId=\"file\">\r\n              <ControlLabel className=\"answerAttachment\">\r\n                Attachment\r\n              </ControlLabel>\r\n              <FormControl onChange={handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            </div>\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId=\"AnswerGroup3\">\r\n            <dev>\r\n              <ControlLabel className=\"answerTitle\" for=\"Answers\">\r\n                Multiple Choice Option No. 3\r\n              </ControlLabel>\r\n            </dev>\r\n            <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <ControlLabel className=\"CorrectChkBox\" for=\"CorrectAnswer\">\r\n                Correct\r\n              </ControlLabel>\r\n              <FormControl\r\n                checked={mcCorrectAnswer3}\r\n                onChange={handleClick3}\r\n                id=\"CorrectAnswer\"\r\n                type=\"checkbox\"\r\n              />\r\n            </div>\r\n            <div className=\"column middle\">\r\n              C)\r\n            </div>\r\n            <div className=\"middleBelow\">\r\n              <span className=\"textBold\">Incorrect\r\n              Feeback</span>{\"\\n\"}\r\n              (Optional)\r\n            </div>\r\n            <div className=\"column right\">\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answer\">\r\n              Answer:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption3}\r\n              id=\"Answer\"\r\n              class=\"answerfield\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. 12\"\r\n              onChange={(e) => setMcOption3(e.target.value)}\r\n            />\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answerfeedback\">\r\n              Feedback:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption3Feedback}\r\n              id=\"Answerfeedback\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. This is the mass number of carbon-12, which is the number of protons plus neutrons in the atom.\"\r\n              onChange={(e) => setMcOption3Feedback(e.target.value)}\r\n            />\r\n            <FormGroup controlId=\"file\">\r\n              <ControlLabel className=\"answerAttachment\">\r\n                Attachment\r\n              </ControlLabel>\r\n              <FormControl onChange={handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            </div>\r\n          </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId=\"AnswerGroup4\">\r\n            <dev>\r\n              <ControlLabel className=\"answerTitle\" for=\"Answers\">\r\n                Multiple Choice Option No. 4\r\n              </ControlLabel>\r\n            </dev>\r\n            <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <ControlLabel className=\"CorrectChkBox\" for=\"CorrectAnswer\">\r\n                Correct\r\n              </ControlLabel>\r\n              <FormControl\r\n                checked={mcCorrectAnswer4}\r\n                onChange={handleClick4}\r\n                id=\"CorrectAnswer\"\r\n                type=\"checkbox\"\r\n              />\r\n            </div>\r\n            <div className=\"column middle\">\r\n              D)\r\n            </div>\r\n            <div className=\"middleBelow\">\r\n              <span className=\"textBold\">Incorrect\r\n              Feeback</span>{\"\\n\"}\r\n              (Optional)\r\n            </div>\r\n            <div className=\"column right\">\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answer\">\r\n              Answer:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption4}\r\n              id=\"Answer\"\r\n              class=\"answerfield\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. 12\"\r\n              onChange={(e) => setMcOption4(e.target.value)}\r\n            />\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answerfeedback\">\r\n              Feedback:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption4Feedback}\r\n              id=\"Answerfeedback\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. This is the mass number of carbon-12, which is the number of protons plus neutrons in the atom.\"\r\n              onChange={(e) => setMcOption4Feedback(e.target.value)}\r\n            />\r\n            <FormGroup controlId=\"file\">\r\n              <ControlLabel className=\"answerAttachment\">\r\n                Attachment\r\n              </ControlLabel>\r\n              <FormControl onChange={handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            </div>\r\n          </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId=\"AnswerGroup5\">\r\n            <dev>\r\n              <ControlLabel className=\"answerTitle\" for=\"Answers\">\r\n                Multiple Choice Option No. 5\r\n              </ControlLabel>\r\n            </dev>\r\n            <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <ControlLabel className=\"CorrectChkBox\" for=\"CorrectAnswer\">\r\n                Correct\r\n              </ControlLabel>\r\n              <FormControl\r\n                checked={mcCorrectAnswer5}\r\n                onChange={handleClick5}\r\n                id=\"CorrectAnswer\"\r\n                type=\"checkbox\"\r\n              />\r\n            </div>\r\n            <div className=\"column middle\">\r\n              E)\r\n            </div>\r\n            <div className=\"middleBelow\">\r\n              <span className=\"textBold\">Incorrect\r\n              Feeback</span>{\"\\n\"}\r\n              (Optional)\r\n            </div>\r\n            <div className=\"column right\">\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answer\">\r\n              Answer:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption5}\r\n              id=\"Answer\"\r\n              class=\"answerfield\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. 12\"\r\n              onChange={(e) => setMcOption5(e.target.value)}\r\n            />\r\n            <ControlLabel className=\"fieldTitle\" for=\"Answerfeedback\">\r\n              Feedback:\r\n            </ControlLabel>\r\n            <FormControl\r\n              value={mcOption5Feedback}\r\n              id=\"Answerfeedback\"\r\n              componentClass=\"textarea\"\r\n              placeholder=\"e.g. This is the mass number of carbon-12, which is the number of protons plus neutrons in the atom.\"\r\n              onChange={(e) => setMcOption5Feedback(e.target.value)}\r\n            />\r\n\r\n            <FormGroup controlId=\"file\">\r\n              <ControlLabel className=\"answerAttachment\">\r\n                Attachment\r\n              </ControlLabel>\r\n              <FormControl onChange={handleFileChange} type=\"file\" />\r\n            </FormGroup>\r\n            </div>\r\n          </div>\r\n          </FormGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <div className=\"containerDiv\">\r\n          <ControlLabel className=\"solutionTitle\" for=\"solution\">\r\n            Solution:\r\n          </ControlLabel>\r\n          <FormControl\r\n            value={solution}\r\n            id=\"solution\"\r\n            componentClass=\"textarea\"\r\n            onChange={(e) => setSolution(e.target.value)}\r\n          />\r\n        </div>\r\n        </FormGroup>\r\n        <div className=\"loaderButtonStyle\">\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          bsStyle=\"primary\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Create\r\n        </LoaderButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\Questions.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ResetPassword.js",["162","163","164"],"import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  HelpBlock,\r\n  FormGroup,\r\n  Glyphicon,\r\n  FormControl,\r\n  ControlLabel,\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./ResetPassword.css\";\r\n// store what user enters in the form\r\nexport default function ResetPassword() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    code: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [codeSent, setCodeSent] = useState(false);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [isSendingCode, setIsSendingCode] = useState(false);\r\n  //checks if fields are empty\r\n  function validateCodeForm() {\r\n    return fields.email.length > 0;\r\n  }\r\n  //checks if fields are empty\r\n  function validateResetForm() {\r\n    return (\r\n      fields.code.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n  //call back function\r\n  async function handleSendCodeClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsSendingCode(true);\r\n\r\n    try {\r\n      await Auth.forgotPassword(fields.email);\r\n      setCodeSent(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsSendingCode(false);\r\n    }\r\n  }\r\n  //call back function\r\n  async function handleConfirmClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsConfirming(true);\r\n\r\n    try {\r\n      await Auth.forgotPasswordSubmit(\r\n        fields.email,\r\n        fields.code,\r\n        fields.password\r\n      );\r\n      setConfirmed(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsConfirming(false);\r\n    }\r\n  }\r\n  //reset password validation\r\n  function renderRequestCodeForm() {\r\n    return (\r\n      <form onSubmit={handleSendCodeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"email\">\r\n          <div className=\"formHeader\">\r\n            <h1>Reset Password</h1>\r\n          </div>\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isSendingCode}\r\n          \r\n        >\r\n          Send Confirmation\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n  //confirm password reset validation\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"code\">\r\n        <div className=\"resetformHeader\">\r\n            <h1>Confirm Reset</h1>\r\n          </div>\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={fields.code}\r\n            onChange={handleFieldChange}\r\n          />\r\n          <HelpBlock>\r\n            Please check your email ({fields.email}) for the confirmation code.\r\n          </HelpBlock>\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <ControlLabel>New Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.confirmPassword}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isConfirming}\r\n        \r\n        >\r\n          Confirm\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n  //successful password reset validation\r\n  function renderSuccessMessage() {\r\n    return (\r\n      <div className=\"success\">\r\n        <h3>Success</h3>\r\n        <Glyphicon glyph=\"ok\" />\r\n        <p>Your password has been reset.</p>\r\n        <p>\r\n          <Link to=\"/login\">\r\n            Click here to login with your new credentials.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ResetPassword\">\r\n      {!codeSent\r\n        ? renderRequestCodeForm()\r\n        : !confirmed\r\n        ? renderConfirmationForm()\r\n        : renderSuccessMessage()}\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ChangePassword.js",["165","166"],"import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./ChangePassword.css\";\r\n// store what user enters in the form\r\nexport default function ChangePassword() {\r\n  const history = useHistory();\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    password: \"\",\r\n    oldPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [isChanging, setIsChanging] = useState(false);\r\n  //checks if fields are empty\r\n  function validateForm() {\r\n    return (\r\n      fields.oldPassword.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n  //call back function\r\n  async function handleChangeClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsChanging(true);\r\n\r\n    try {\r\n      const currentUser = await Auth.currentAuthenticatedUser();\r\n      await Auth.changePassword(\r\n        currentUser,\r\n        fields.oldPassword,\r\n        fields.password\r\n      );\r\n\r\n      history.push(\"/settings\");\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsChanging(false);\r\n    }\r\n  }\r\n //cahnge password form\r\n  return (\r\n    <div className=\"ChangePassword\">\r\n      <form onSubmit={handleChangeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"oldPassword\">\r\n          <div className=\"formHeader\">\r\n            <h1>Change Password</h1>\r\n          </div>\r\n          <ControlLabel>Old Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.oldPassword}\r\n          />\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <ControlLabel>New Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.password}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n\r\n          isLoading={isChanging}\r\n        >\r\n          Change Password\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\containers\\ChangeEmail.js",["167","168","169"],"import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./ChangeEmail.css\";\r\n// store what user enters in the form\r\nexport default function ChangeEmail() {\r\n  const history = useHistory();\r\n  const [codeSent, setCodeSent] = useState(false);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    code: \"\",\r\n    email: \"\",\r\n  });\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [isSendingCode, setIsSendingCode] = useState(false);\r\n  //checks if fields are empty\r\n  function validateEmailForm() {\r\n    return fields.email.length > 0;\r\n  }\r\n  //checks if fields are empty\r\n  function validateConfirmForm() {\r\n    return fields.code.length > 0;\r\n  }\r\n  //call back function\r\n  async function handleUpdateClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsSendingCode(true);\r\n\r\n    try {\r\n      const user = await Auth.currentAuthenticatedUser();\r\n      await Auth.updateUserAttributes(user, { email: fields.email });\r\n      setCodeSent(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsSendingCode(false);\r\n    }\r\n  }\r\n  //call back function\r\n  async function handleConfirmClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsConfirming(true);\r\n\r\n    try {\r\n      await Auth.verifyCurrentUserAttributeSubmit(\"email\", fields.code);\r\n\r\n      history.push(\"/settings\");\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsConfirming(false);\r\n    }\r\n  }\r\n  // change email validation form\r\n  function renderUpdateForm() {\r\n    return (\r\n      <form onSubmit={handleUpdateClick}>\r\n        <div className=\"formHeader\">\r\n          <h1>Change Email</h1>\r\n        </div>\r\n        <div className=\"Form\">\r\n        <FormGroup bsSize=\"large\" controlId=\"email\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        </div>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isSendingCode}\r\n          \r\n        >\r\n          Update Email\r\n        </Button>\r\n      </form>\r\n    \r\n    );\r\n  }\r\n  //confirmation code validation form\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"code\">\r\n        <div className=\"formHeader\">\r\n        <h2>Confirmation Code</h2>\r\n        </div>\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={fields.code}\r\n            onChange={handleFieldChange}\r\n          />\r\n          <HelpBlock>\r\n            Please check your email ({fields.email}) for the confirmation code.\r\n          </HelpBlock>\r\n        </FormGroup>\r\n        <Button\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isConfirming}\r\n          \r\n        >\r\n          Confirm\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ChangeEmail\">\r\n      {!codeSent ? renderUpdateForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\hooksLib.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\components\\LoaderButton.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\openstaxList.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\thoughtTypeList.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\reviewerList.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\questionTopic.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\questionUnit.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\statusOptions.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\libs\\awsLib.js",[],"C:\\Users\\jpbog\\Documents\\IT4990\\Update-Chem-101-Project\\101Edu_ContentDB-UI\\src\\data\\newStatusOptions.js",[],{"ruleId":"170","severity":1,"message":"171","line":1,"column":1,"nodeType":"172","endLine":17,"endColumn":5},{"ruleId":"173","severity":1,"message":"174","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"173","severity":1,"message":"177","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":12},{"ruleId":"173","severity":1,"message":"178","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":16},{"ruleId":"173","severity":1,"message":"179","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":18},{"ruleId":"173","severity":1,"message":"180","line":53,"column":9,"nodeType":"175","messageId":"176","endLine":53,"endColumn":16},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"173","severity":1,"message":"185","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"186","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":14},{"ruleId":"173","severity":1,"message":"187","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":16},{"ruleId":"173","severity":1,"message":"188","line":15,"column":10,"nodeType":"175","messageId":"176","endLine":15,"endColumn":19},{"ruleId":"173","severity":1,"message":"189","line":15,"column":21,"nodeType":"175","messageId":"176","endLine":15,"endColumn":33},{"ruleId":"173","severity":1,"message":"190","line":16,"column":10,"nodeType":"175","messageId":"176","endLine":16,"endColumn":26},{"ruleId":"173","severity":1,"message":"191","line":17,"column":10,"nodeType":"175","messageId":"176","endLine":17,"endColumn":25},{"ruleId":"173","severity":1,"message":"192","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":14},{"ruleId":"173","severity":1,"message":"193","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":22},{"ruleId":"173","severity":1,"message":"194","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":17},{"ruleId":"173","severity":1,"message":"195","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":24},{"ruleId":"173","severity":1,"message":"196","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":18},{"ruleId":"173","severity":1,"message":"197","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":24},{"ruleId":"173","severity":1,"message":"198","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":22},{"ruleId":"173","severity":1,"message":"199","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":19},{"ruleId":"173","severity":1,"message":"200","line":17,"column":8,"nodeType":"175","messageId":"176","endLine":17,"endColumn":15},{"ruleId":"173","severity":1,"message":"201","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":20},{"ruleId":"173","severity":1,"message":"202","line":19,"column":12,"nodeType":"175","messageId":"176","endLine":19,"endColumn":24},{"ruleId":"173","severity":1,"message":"201","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":20},{"ruleId":"173","severity":1,"message":"202","line":29,"column":12,"nodeType":"175","messageId":"176","endLine":29,"endColumn":24},{"ruleId":"173","severity":1,"message":"203","line":37,"column":12,"nodeType":"175","messageId":"176","endLine":37,"endColumn":36},{"ruleId":"173","severity":1,"message":"204","line":1,"column":35,"nodeType":"175","messageId":"176","endLine":1,"endColumn":43},{"ruleId":"173","severity":1,"message":"201","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":20},{"ruleId":"173","severity":1,"message":"205","line":29,"column":12,"nodeType":"175","messageId":"176","endLine":29,"endColumn":28},{"ruleId":"173","severity":1,"message":"206","line":33,"column":12,"nodeType":"175","messageId":"176","endLine":33,"endColumn":29},{"ruleId":"173","severity":1,"message":"201","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"173","severity":1,"message":"202","line":19,"column":12,"nodeType":"175","messageId":"176","endLine":19,"endColumn":24},{"ruleId":"173","severity":1,"message":"201","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":20},{"ruleId":"173","severity":1,"message":"207","line":26,"column":12,"nodeType":"175","messageId":"176","endLine":26,"endColumn":29},{"ruleId":"173","severity":1,"message":"208","line":30,"column":12,"nodeType":"175","messageId":"176","endLine":30,"endColumn":31},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'history' is assigned a value but never used.","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'API' is defined but never used.","'config' is defined but never used.","'render' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'isAuthenticating' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'PageHeader' is defined but never used.","'FolderOpenIcon' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'Typography' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ButtonGroup' is defined but never used.","'AddIcon' is defined but never used.","'LoaderButton' is defined but never used.","'validateForm' is defined but never used.","'validateConfirmationForm' is defined but never used.","'ReactDOM' is defined but never used.","'validateCodeForm' is defined but never used.","'validateResetForm' is defined but never used.","'validateEmailForm' is defined but never used.","'validateConfirmForm' is defined but never used.","no-global-assign","no-unsafe-negation"]